# Content for roles/wizardpro_bootstrap/files/github_workflows/ci.yaml
name: WizardPro CI Checks

on: [push, pull_request] # Run on pushes to any branch and on pull requests

jobs:
  lint_test_typecheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12' # Match project python version
        cache: 'pip' # Cache dependencies
        cache-dependency-path: 'orchestrator/requirements.txt' # Specify requirements file path

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install from primary requirements file relative to repo root
        if [ -f "orchestrator/requirements.txt" ]; then
          pip install -r orchestrator/requirements.txt
        else
          echo "::error file=orchestrator/requirements.txt::requirements.txt not found!"
          exit 1
        fi
        # Ensure check tools are installed (might be redundant if already in requirements)
        pip install ruff mypy pytest black

    - name: Lint and Format Check with Ruff
      run: |
        # Check source code - run from repo root
        # Exclude venv automatically if specified in pyproject.toml/ruff.toml (good practice)
        # Or specify paths explicitly:
        ruff check orchestrator/
        ruff format --check orchestrator/
        # We typically wouldn't check the agent script here as it lives outside the repo

    - name: Type Check with MyPy
      run: |
        # MyPy might need a config file (pyproject.toml) for better results later
        # Ignore 'skip plotting library imports' which is common if libraries are missing
        # The relative import error might persist here unless run differently.
        mypy orchestrator/ --ignore-missing-imports --follow-imports=skip || echo "MyPy finished (may have errors)" # Run even if errors occur

    # - name: Run Unit Tests with Pytest # Uncomment when tests are added
    #   run: |
    #     # Add tests to a 'tests/' directory later
    #     pytest tests/

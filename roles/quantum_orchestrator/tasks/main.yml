---
# File: roles/quantum_orchestrator/tasks/main.yml
# Deploys Quantum Orchestrator App, PostgreSQL DB, and Ollama LLM Service

- name: Ensure required Vault variables are defined (placeholders)
  ansible.builtin.assert:
    that:
      - vault_qo_db_user is defined
      - vault_qo_db_password is defined
      - vault_qo_db_name is defined
      - vault_qo_flask_secret_key is defined
    fail_msg: "Required Vault variables (vault_qo_db_*) are not defined. Please define them in inventory/group_vars/all/vault.yml"
    quiet: yes
  tags: [quantum_orchestrator, config, prerequisites]

- name: Define deployment base directory variable
  ansible.builtin.set_fact:
    qo_deploy_dir: "{{ qo_base_dir | default('/opt/docker/quantum_orchestrator') }}"
  tags: [quantum_orchestrator, config]

- name: Ensure Quantum Orchestrator deployment directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ docker_run_user | default('root') }}" # User defined in site.yml server play
    group: "{{ docker_run_group | default('root') }}" # Group defined in site.yml server play
    mode: "0755"
  loop:
    - "{{ qo_deploy_dir }}"
    - "{{ qo_deploy_dir }}/app_code" # Directory to sync source code to for build
    - "{{ qo_deploy_dir }}/ollama_data" # Ollama models persistent storage
  become: yes
  tags: [quantum_orchestrator, config]

# --- Start: Replace 'synchronize' task with this 'copy' task ---
- name: Copy application code to server for building (using Copy module)
  ansible.builtin.copy:
    src: "{{ qo_local_code_path }}/" # Path on control node (pong)
    dest: "{{ qo_deploy_dir }}/app_code/" # Path on server (aiseed)
    owner: "{{ docker_run_user | default('root') }}" # Set owner on target
    group: "{{ docker_run_group | default('root') }}"# Set group on target
    mode: '0755' # Set reasonable directory/file mode
  become: yes # Need become to write to /opt/docker/... and set ownership
  tags: [quantum_orchestrator, config, code_sync]
# --- End: Replaced Task ---

- name: Ensure PostgreSQL data directory permissions (if needed by image)
  ansible.builtin.file:
    path: "{{ qo_postgres_data_dir | default(qo_deploy_dir ~ '/pg_data') }}"
    state: directory
    owner: "999" # Default postgres user ID in official image
    group: "999" # Default postgres group ID in official image
    mode: "0700" # Postgres requires strict permissions
  become: yes
  tags: [quantum_orchestrator, config, permissions]

- name: Ensure Ollama data directory permissions
  ansible.builtin.file:
    path: "{{ qo_deploy_dir }}/ollama_data"
    state: directory
    owner: "101" # Common default Ollama UID - VERIFY IF NEEDED
    group: "102" # Common default Ollama GID - VERIFY IF NEEDED
    mode: "0755"
  become: yes
  tags: [quantum_orchestrator, config, permissions]

- name: Template Docker Compose file for Quantum Orchestrator Stack
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ qo_deploy_dir }}/docker-compose.yml"
    owner: "{{ docker_run_user | default('root') }}"
    group: "{{ docker_run_group | default('root') }}"
    mode: "0644"
  become: yes
  notify: Restart Quantum Orchestrator stack
  tags: [quantum_orchestrator, config]

# --- Start: Corrected Docker Compose Task ---
- name: Ensure Quantum Orchestrator stack is running via Docker Compose (includes build)
  community.docker.docker_compose_v2:
    project_name: qo_stack              # Explicit project name
    # project_src: "{{ qo_deploy_dir }}" # REMOVED - Use definition instead
    definition: "{{ lookup('template', 'docker-compose.yml.j2') | from_yaml }}" # Embed template content
    build: policy                     # CORRECTED: Use 'policy' (build if missing)
    state: present
    pull: missing                     # Pull base images if not present locally
  become: yes
  notify: Restart Quantum Orchestrator stack # Notify handler on changes
  tags: [quantum_orchestrator, docker, run]
# --- End: Corrected Docker Compose Task ---

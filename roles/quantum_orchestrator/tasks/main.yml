---
# File: roles/quantum_orchestrator/tasks/main.yml
# Version: FINAL v2.1 - Uses Copy + project_src for build

- name: Ensure required Vault variables are defined (placeholders)
  ansible.builtin.assert:
    that:
      - vault_qo_db_user is defined
      - vault_qo_db_password is defined
      - vault_qo_db_name is defined
      - vault_qo_flask_secret_key is defined
    fail_msg: "Required Vault variables (vault_qo_db_*) are not defined. Please define them in inventory/group_vars/all/vault.yml"
    quiet: yes
  tags: [quantum_orchestrator, config, prerequisites]

- name: Define deployment base directory variable
  ansible.builtin.set_fact:
    qo_deploy_dir: "{{ qo_base_dir | default('/opt/docker/quantum_orchestrator') }}"
  tags: [quantum_orchestrator, config]

- name: Ensure Quantum Orchestrator deployment directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ docker_run_user | default('root') }}" # User defined in site.yml server play
    group: "{{ docker_run_group | default('root') }}"# Group defined in site.yml server play
    mode: '0755'
  loop:
    - "{{ qo_deploy_dir }}"
    - "{{ qo_deploy_dir }}/app_code" # Pre-create for clarity, will be replaced
    - "{{ qo_deploy_dir }}/ollama_data" # Ollama models persistent storage
  become: yes
  tags: [quantum_orchestrator, config]

- name: Ensure app_code directory is initially absent (forces clean copy)
  ansible.builtin.file:
    path: "{{ qo_deploy_dir }}/app_code"
    state: absent
  become: yes
  tags: [quantum_orchestrator, config, code_sync]

- name: Recreate app_code directory for source code
  ansible.builtin.file:
    path: "{{ qo_deploy_dir }}/app_code"
    state: directory
    owner: "{{ docker_run_user | default('root') }}" # Set ownership for copy destination
    group: "{{ docker_run_group | default('root') }}"
    mode: '0755'
  become: yes
  tags: [quantum_orchestrator, config, code_sync]

- name: Copy application code to server for building (using Copy module)
  ansible.builtin.copy:
    src: "{{ qo_local_code_path }}/" # Path on control node (pong)
    dest: "{{ qo_deploy_dir }}/app_code/" # Path on server (aiseed)
    owner: "{{ docker_run_user | default('root') }}" # Ensure final code ownership is correct
    group: "{{ docker_run_group | default('root') }}"
    mode: '0755' # Set appropriate mode for code/dirs
  become: yes # Need become to write to /opt/docker/... and set ownership
  tags: [quantum_orchestrator, config, code_sync]

- name: Ensure Ollama data directory permissions
  ansible.builtin.file:
    path: "{{ qo_deploy_dir }}/ollama_data"
    state: directory
    owner: "101" # Common default Ollama UID - REVIEW and adjust if needed
    group: "102" # Common default Ollama GID - REVIEW and adjust if needed
    mode: '0755'
  become: yes
  tags: [quantum_orchestrator, config, permissions]

- name: Template Docker Compose file for Quantum Orchestrator Stack
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ qo_deploy_dir }}/docker-compose.yml" # Render to final location
    owner: "{{ docker_run_user | default('root') }}"
    group: "{{ docker_run_group | default('root') }}"
    mode: '0644'
  become: yes
  notify: Restart Quantum Orchestrator stack # Notify if template changes
  tags: [quantum_orchestrator, config]

- name: Ensure Quantum Orchestrator stack is running via Docker Compose (builds from file)
  # Runs 'docker compose up -d --build' using the file templated above
  community.docker.docker_compose_v2:
    project_name: qo_stack
    project_src: "{{ qo_deploy_dir }}" # Point to dir containing docker-compose.yml and app_code context
    # definition: ... # REMOVED - reads from file via project_src now
    build: always
    state: present
    pull: missing # Pull base images like postgres, ollama if not present
  become: yes
  notify: Restart Quantum Orchestrator stack # Notify if compose brings things up/changes them
  tags: [quantum_orchestrator, docker, run]

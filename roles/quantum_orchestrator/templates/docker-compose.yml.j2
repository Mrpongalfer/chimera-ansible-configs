# File: roles/quantum_orchestrator/templates/docker-compose.yml.j2
# Deploys App, PostgreSQL DB, and Ollama

# Define shared networks
networks:
  # Connects to the existing monitoring network (created by Prometheus role)
  monitoring_net:
    name: prometheus_stack_monitoring_net
    external: true
  # Internal network for App <-> DB communication
  qo_backend_net:
    driver: bridge

# Define persistent volumes
volumes:
  qo_postgres_data: {}
  qo_ollama_data: {}

services:
  # --- Quantum Orchestrator Application ---
  app:
    container_name: quantum_orchestrator_app
    build:
      context: ./app_code # Build from synchronized code directory
      dockerfile: Dockerfile # Use the Dockerfile generated in app_code
    restart: unless-stopped
    ports:
      - "{{ qo_app_port | default(8000) }}:{{ qo_container_port | default(8000) }}" # Map host port to container port
    environment:
      # Inject secrets and config via environment variables
      DATABASE_URL: "postgresql://{{ vault_qo_db_user }}:{{ vault_qo_db_password }}@postgres:5432/{{ vault_qo_db_name }}"
      FLASK_SECRET_KEY: "{{ vault_qo_flask_secret_key }}"
      # Point to local Ollama service
      LLM_API_BASE: "http://ollama:11434" # Assumes service name 'ollama'
      LLM_MODEL_NAME: "{{ qo_llm_model | default('mixtral') }}" # Default model, can be overridden
      # Add any other required environment variables here
      # EXAMPLE_VAR: "{{ vault_example_var | default('default_value') }}"
    depends_on:
      - postgres # Wait for DB to be ready (basic check, might need wait-for-it script)
      - ollama   # Wait for Ollama
    networks:
      - qo_backend_net
      - monitoring_net # Also connect to monitoring network
    labels:
      org.label-schema.group: "application"
      managed-by: "ansible-chimera-prime"

  # --- PostgreSQL Database ---
  postgres:
    container_name: quantum_orchestrator_db
    image: postgres:latest # Use official Postgres image
    restart: unless-stopped
    volumes:
      - qo_postgres_data:/var/lib/postgresql/data # Persistent data volume
    environment:
      POSTGRES_USER: "{{ vault_qo_db_user }}"
      POSTGRES_PASSWORD: "{{ vault_qo_db_password }}"
      POSTGRES_DB: "{{ vault_qo_db_name }}"
    networks:
      - qo_backend_net # Only expose DB on the backend network
    expose:
      - "5432" # Expose port internally, not to host
    labels:
      org.label-schema.group: "database"
      managed-by: "ansible-chimera-prime"

  # --- Ollama LLM Service ---
  ollama:
    container_name: quantum_orchestrator_ollama
    image: ollama/ollama:latest # Use official Ollama image
    restart: unless-stopped
    volumes:
      - qo_ollama_data:/root/.ollama # Persistent models volume
    networks:
      - qo_backend_net # Expose primarily on backend network
      - monitoring_net # Optionally connect to monitoring if Ollama exposes metrics
    expose:
      - "11434" # Expose port internally
    # Add ports mapping if direct host access needed:
    # ports:
    #  - "11434:11434"
    # Add GPU capabilities if required/available:
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    labels:
      org.label-schema.group: "ai_service"
      managed-by: "ansible-chimera-prime"


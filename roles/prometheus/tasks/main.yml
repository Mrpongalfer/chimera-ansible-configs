---
# Tasks for Prometheus role - v1.7 Relying on Play Vars
# Assumes ALL prometheus_* vars are defined directly in the calling play's 'vars:' section

- name: Ensure Prometheus directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ docker_run_user | default('root') }}"
    group: "{{ docker_run_group | default('root') }}"
    mode: '0755'
  loop:
    - "{{ prometheus_compose_dir }}"
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_data_dir }}"

- name: Deploy Prometheus configuration file (prometheus.yml)
  ansible.builtin.template:
    src: "{{ prometheus_config_template }}"
    dest: "{{ prometheus_config_file_path }}"
    owner: "{{ docker_run_user | default('root') }}"
    group: "{{ docker_run_group | default('root') }}"
    mode: '0644'
  notify: Restart Prometheus container

- name: Ensure Docker Compose V2 is available
  ansible.builtin.command: docker compose version
  register: compose_version_check
  changed_when: false
  failed_when: compose_version_check.rc != 0

- name: Deploy Prometheus docker-compose.yml file from template
  ansible.builtin.template:
    src: "{{ prometheus_template_name }}"
    dest: "{{ prometheus_compose_file_path }}"
    owner: "{{ docker_run_user | default('root') }}"
    group: "{{ docker_run_group | default('root') }}"
    mode: '0644'
  notify: Start Prometheus container # Consider changing to 'Restart Prometheus container' for consistency if config changes also require compose restart

- name: Ensure Prometheus container is running via Docker Compose
  community.docker.docker_compose_v2:
    project_src: "{{ prometheus_compose_dir }}"
    state: present
    pull: missing # Change to 'always' if you want latest image on every run
  register: compose_result

- name: Ensure problematic lazygit PPA is removed (if present)
  ansible.builtin.apt_repository:
    repo: "ppa:lazygit-team/release"
    state: absent
  become: yes
  when: "'server' in group_names" # Only run this on hosts in the 'server' group
  ignore_errors: yes # Ignore if the PPA doesn't exist, just ensure it's gone

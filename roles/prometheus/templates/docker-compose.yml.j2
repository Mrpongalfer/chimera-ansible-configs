# ~/Projects/chimera-ansible-configs/roles/prometheus/templates/docker-compose.yml.j2
version: '3.7'

volumes:
  # Define a Docker volume for persistent Prometheus data
  prometheus_data: {}

networks:
  # Define a network for monitoring components
  monitoring_net:
    driver: bridge

services:
  prometheus:
    image: prom/prometheus:latest # Use the latest official image
    container_name: prometheus
    restart: unless-stopped # Ensure service restarts automatically
    volumes:
      # Mount the main configuration file (templated by Ansible onto the host)
      - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      # Mount the persistent data volume
      - prometheus_data:/prometheus
    command:
      # Specify command line arguments for Prometheus
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle' # Allows hot-reloading config via API
    - ports:
    -   # Expose Prometheus port 9090 to the host
    -   - "{{ prometheus_port | default('9090') }}:9090" # Use variable for flexibility
    + ports:
    +   # Expose Prometheus port to the host, using override variable if defined
    +   - "{{ prometheus_port_override | default('9090') }}:9090"
    networks:
      # Connect to the monitoring network
      - monitoring_net
    labels:
      # Add labels for organization/tooling
      org.label-schema.group: "monitoring"
      managed-by: "ansible-chimera-prime"

  # Potential future addition: Node Exporter (Ensure handled by appropriate role/tasks)
  # node_exporter:
  #   image: prom/node-exporter:latest
  #   container_name: node_exporter
  #   # ... configuration ...

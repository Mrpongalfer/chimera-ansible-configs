# /opt/architect_configs/site.yml
# Version 1.4 (Automated) - Defining vars directly in plays
---
- name: Apply common configuration to all hosts
  hosts: all
  become: yes
  gather_facts: yes
  # REMOVED vars_files: directive for group_vars/all.yml
  vars:
    # Define common vars needed by 'common' role here
    system_timezone: "America/Denver"
    admin_users:
      - { username: aiseed, shell: /bin/bash }
      - { username: pong, shell: /bin/bash }
    common_pkgs: # Renamed variable used in common role tasks
      - build-essential
      - python3-dev
      - curl
      - wget
      - git
      - vim
      - tmux
      - htop
      - net-tools
      - dnsutils
      - unzip
      - ca-certificates
      - gnupg
    # Add any other vars needed by the 'common' role or globally here
    security_ssh_port: 22 # Needed by security role too? Define globally or per-play.
    fail2ban_ignoreip: '127.0.0.1/8 ::1 192.168.0.0/24' # Example
    docker_users_to_group: # Used by Docker role
      - aiseed
      - pong
    monitoring_allowed_sources: '192.168.0.0/24' # Used by security role
    node_exporter_port: 9100 # Used by prometheus config template
    loki_server_url: "http://192.168.0.95:3100/loki/api/v1/push" # Used by promtail role

  roles:
    # Ensure roles/common/tasks/main.yml uses 'common_pkgs' now
    - common

- name: Apply security baseline to all hosts
  hosts: all
  become: yes
  gather_facts: no
  # Vars needed by security role (if not defined globally above)
  # vars:
  #   security_ssh_port: 22
  #   security_fail2ban_enabled: true # Example
  #   fail2ban_ignoreip: '127.0.0.1/8 ::1 192.168.0.0/24'
  #   monitoring_allowed_sources: '192.168.0.0/24'
  #   server_ufw_allow_rules: Defined in group_vars/server.yml still, but might move here
  #   client_ufw_allow_rules: Define in group_vars/clients.yml or here
  roles:
    - security

- name: Configure Docker on all hosts
  hosts: all
  become: yes
  gather_facts: no
  # Vars needed by docker role (if not defined globally above)
  # vars:
  #   docker_users_to_group:
  #     - aiseed
  #     - pong
  roles:
    - docker

- name: Configure Node Exporter on all hosts
  hosts: all
  become: yes
  gather_facts: no
  roles:
    - node_exporter

- name: Configure Promtail on all hosts
  hosts: all
  become: yes
  gather_facts: no
  # Vars needed by promtail role (if not defined globally above)
  # vars:
  #  loki_server_url: "..."
  roles:
    - promtail

# --- Server-Specific Configuration ---
- name: Configure server-specific settings
  hosts: server # TARGETS ONLY SERVER GROUP
  become: yes
  gather_facts: no
  # Define ALL variables needed by server roles HERE
  vars:
    prometheus_port_override: 9091 # Use non-default port
    prometheus_config_dir: "/opt/docker/prometheus/config"
    prometheus_data_dir: "/opt/docker/prometheus/data"
    prometheus_compose_dir: "/opt/docker/prometheus"
    docker_run_user: "aiseed" # User for docker artifacts on server
    docker_run_group: "aiseed" # Group for docker artifacts on server
    prometheus_template_name: "docker-compose.yml.j2"
    prometheus_compose_file_path: "{{ prometheus_compose_dir }}/docker-compose.yml"
    prometheus_config_template: "prometheus.yml.j2"
    prometheus_config_file_path: "{{ prometheus_config_dir }}/prometheus.yml"
    # Loki vars if needed by loki role
    loki_config_dir: "/opt/docker/loki/config" # Example
    # Grafana vars if needed by grafana role
  roles:
    - prometheus
    - loki
    # - grafana

# --- Client-Specific Configuration ---
- name: Configure client-specific settings
  hosts: clients # TARGETS ONLY CLIENT GROUP
  become: yes
  gather_facts: no
  # Define client-specific variables here if needed
  vars:
    placeholder_client_var: true
  roles:
    - prompt_debug # Keeping placeholder from user provided file
